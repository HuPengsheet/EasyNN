#include"test_ulti.h"
#include"test_fun.h"
#include"ir.h"
#include"net.h"
#include"mat.h"
#include"layers/convolution.h"

std::vector<std::vector<std::vector<float>>> conv_input_data2=\
        {{{0.0466, 0.5035, 0.3835, 0.8454, 0.0914, 0.3246, 0.0785, 0.6963,
           0.9694, 0.5654, 0.8196, 0.0589, 0.3179, 0.7435, 0.8902, 0.3490},
          {0.1816, 0.3534, 0.8486, 0.3395, 0.8878, 0.9373, 0.8915, 0.8101,
           0.3151, 0.1122, 0.7519, 0.0171, 0.9831, 0.9489, 0.8900, 0.3208},
          {0.8245, 0.6836, 0.2531, 0.2472, 0.5030, 0.3294, 0.9839, 0.6510,
           0.2248, 0.5034, 0.8488, 0.9542, 0.6837, 0.5748, 0.2065, 0.6602},
          {0.8375, 0.3686, 0.4591, 0.0605, 0.1973, 0.4110, 0.2199, 0.6896,
           0.9847, 0.6419, 0.2044, 0.0431, 0.7537, 0.0890, 0.9526, 0.7143},
          {0.7955, 0.4724, 0.6225, 0.2803, 0.2575, 0.0541, 0.1331, 0.1819,
           0.2843, 0.4022, 0.9956, 0.0891, 0.5282, 0.1516, 0.3225, 0.3906},
          {0.7154, 0.9536, 0.5136, 0.4539, 0.9316, 0.8255, 0.7182, 0.2547,
           0.8993, 0.7119, 0.7713, 0.2871, 0.9431, 0.3226, 0.4273, 0.9929},
          {0.9101, 0.4707, 0.1788, 0.6201, 0.9705, 0.3028, 0.7695, 0.5895,
           0.5127, 0.5072, 0.2309, 0.7298, 0.5662, 0.8107, 0.2197, 0.6610},
          {0.7695, 0.2761, 0.7810, 0.8978, 0.8475, 0.8026, 0.0954, 0.6920,
           0.3346, 0.8448, 0.8951, 0.4031, 0.4441, 0.7112, 0.0508, 0.1033},
          {0.3403, 0.7578, 0.0252, 0.9975, 0.4887, 0.5073, 0.5860, 0.3016,
           0.8725, 0.2938, 0.5976, 0.5255, 0.7526, 0.7672, 0.7665, 0.4279},
          {0.5865, 0.6740, 0.4011, 0.6860, 0.3391, 0.9648, 0.5617, 0.4582,
           0.7512, 0.4442, 0.9490, 0.3876, 0.3900, 0.3579, 0.9038, 0.5204},
          {0.8238, 0.6280, 0.1586, 0.3345, 0.7639, 0.0446, 0.1538, 0.8894,
           0.2738, 0.3569, 0.2521, 0.1774, 0.4237, 0.0672, 0.1100, 0.1701},
          {0.1827, 0.4595, 0.6831, 0.1079, 0.2529, 0.8459, 0.6445, 0.0511,
           0.9919, 0.3665, 0.9462, 0.5307, 0.0474, 0.0088, 0.3555, 0.6558},
          {0.7184, 0.8686, 0.5537, 0.5128, 0.3524, 0.8272, 0.4906, 0.3151,
           0.9259, 0.9605, 0.1495, 0.1842, 0.0947, 0.1569, 0.3076, 0.9635},
          {0.6319, 0.9993, 0.7912, 0.1841, 0.2440, 0.6142, 0.5765, 0.7118,
           0.2173, 0.5427, 0.3986, 0.3519, 0.0497, 0.6004, 0.3881, 0.4057},
          {0.6514, 0.8409, 0.2987, 0.2270, 0.8887, 0.3410, 0.1061, 0.0412,
           0.6538, 0.4931, 0.5423, 0.1873, 0.6871, 0.5655, 0.8736, 0.1071},
          {0.0334, 0.8177, 0.4034, 0.5797, 0.0160, 0.1695, 0.4974, 0.5505,
           0.0892, 0.2462, 0.4790, 0.3193, 0.2615, 0.2370, 0.9539, 0.0547}},

         {{0.9954, 0.2096, 0.2715, 0.3897, 0.7075, 0.5422, 0.9340, 0.8223,
           0.2081, 0.6324, 0.4734, 0.9844, 0.8961, 0.8990, 0.0734, 0.1334},
          {0.5049, 0.4450, 0.7374, 0.0195, 0.7874, 0.8833, 0.6395, 0.4249,
           0.2213, 0.9149, 0.8776, 0.9318, 0.5755, 0.4319, 0.5235, 0.4899},
          {0.0288, 0.4540, 0.7616, 0.2050, 0.2798, 0.2039, 0.4848, 0.8593,
           0.2374, 0.9312, 0.7109, 0.4192, 0.8405, 0.7955, 0.6114, 0.3951},
          {0.2759, 0.9718, 0.7980, 0.4653, 0.6706, 0.7190, 0.6525, 0.8784,
           0.6230, 0.7102, 0.5984, 0.8976, 0.7341, 0.6182, 0.9339, 0.9967},
          {0.6600, 0.9111, 0.8877, 0.1958, 0.5367, 0.2571, 0.8984, 0.4163,
           0.7502, 0.2053, 0.0287, 0.5423, 0.5044, 0.7930, 0.3881, 0.2762},
          {0.9403, 0.5572, 0.2708, 0.2728, 0.4673, 0.0614, 0.5730, 0.9786,
           0.5541, 0.6520, 0.3375, 0.9279, 0.7974, 0.0237, 0.8175, 0.8958},
          {0.5585, 0.7121, 0.6659, 0.4031, 0.2983, 0.0725, 0.3038, 0.7520,
           0.1362, 0.0223, 0.7744, 0.0456, 0.6118, 0.3034, 0.3700, 0.9814},
          {0.0480, 0.2717, 0.6966, 0.1230, 0.1891, 0.7799, 0.7935, 0.8340,
           0.4803, 0.4184, 0.2050, 0.7134, 0.7040, 0.8212, 0.3448, 0.3537},
          {0.7062, 0.1090, 0.7181, 0.0255, 0.2798, 0.2753, 0.1409, 0.7004,
           0.5940, 0.6698, 0.2766, 0.9560, 0.0035, 0.7866, 0.5041, 0.3567},
          {0.8354, 0.4759, 0.2337, 0.5581, 0.4945, 0.2763, 0.0208, 0.2806,
           0.4123, 0.4326, 0.9877, 0.5321, 0.5868, 0.7194, 0.5903, 0.3188},
          {0.2869, 0.4256, 0.4183, 0.5415, 0.1530, 0.3970, 0.5052, 0.9447,
           0.1222, 0.0871, 0.6468, 0.0728, 0.1246, 0.1658, 0.3326, 0.7841},
          {0.4366, 0.1833, 0.6790, 0.3928, 0.7809, 0.3618, 0.3082, 0.7634,
           0.4048, 0.0824, 0.7735, 0.8011, 0.6413, 0.3085, 0.1060, 0.7290},
          {0.6892, 0.3298, 0.6756, 0.8472, 0.8516, 0.7113, 0.7916, 0.5521,
           0.8148, 0.8940, 0.7663, 0.6115, 0.8837, 0.4899, 0.3697, 0.1471},
          {0.3946, 0.3613, 0.8903, 0.6005, 0.7344, 0.0535, 0.7782, 0.1027,
           0.1716, 0.2614, 0.6020, 0.7233, 0.1185, 0.2250, 0.4959, 0.6954},
          {0.1838, 0.4212, 0.0837, 0.1397, 0.1395, 0.2569, 0.5661, 0.0306,
           0.4308, 0.2117, 0.8276, 0.3461, 0.9869, 0.7881, 0.0412, 0.3106},
          {0.2728, 0.1996, 0.7798, 0.8264, 0.5199, 0.8456, 0.6239, 0.8604,
           0.7446, 0.3014, 0.1591, 0.8182, 0.1302, 0.7219, 0.6293, 0.3108}},

         {{0.1562, 0.6392, 0.5827, 0.8697, 0.2339, 0.9163, 0.3047, 0.4676,
           0.1918, 0.3138, 0.8674, 0.5395, 0.2390, 0.3910, 0.4604, 0.6240},
          {0.0604, 0.7888, 0.9611, 0.7164, 0.0738, 0.7196, 0.4332, 0.2835,
           0.6873, 0.5587, 0.6283, 0.1148, 0.8072, 0.6945, 0.4046, 0.5668},
          {0.9856, 0.8632, 0.8164, 0.8168, 0.1374, 0.8695, 0.9205, 0.0387,
           0.5809, 0.3292, 0.7723, 0.7859, 0.4050, 0.7017, 0.2350, 0.4207},
          {0.2243, 0.9338, 0.0155, 0.5813, 0.9639, 0.3430, 0.5774, 0.4405,
           0.4044, 0.9244, 0.2323, 0.1536, 0.6836, 0.8016, 0.2107, 0.5686},
          {0.0570, 0.5198, 0.4337, 0.9113, 0.9933, 0.4569, 0.1808, 0.6703,
           0.5042, 0.4939, 0.5907, 0.4788, 0.2394, 0.7721, 0.6165, 0.5500},
          {0.1249, 0.1590, 0.2389, 0.0713, 0.6023, 0.5012, 0.2266, 0.4464,
           0.2728, 0.6722, 0.5217, 0.2937, 0.4338, 0.2196, 0.1984, 0.0603},
          {0.0318, 0.7708, 0.2027, 0.1827, 0.1803, 0.1320, 0.0775, 0.8238,
           0.4856, 0.1274, 0.1092, 0.0168, 0.2547, 0.6823, 0.1088, 0.4249},
          {0.3883, 0.8162, 0.3525, 0.7028, 0.7514, 0.6719, 0.5569, 0.5994,
           0.3673, 0.0675, 0.6457, 0.1521, 0.7883, 0.4054, 0.4431, 0.5347},
          {0.3788, 0.7118, 0.7790, 0.4617, 0.2109, 0.6025, 0.6961, 0.0326,
           0.9071, 0.2640, 0.3158, 0.7637, 0.0763, 0.5770, 0.7151, 0.8814},
          {0.3365, 0.0956, 0.8704, 0.8435, 0.0795, 0.0926, 0.6587, 0.2660,
           0.6100, 0.6053, 0.5402, 0.3168, 0.6943, 0.9178, 0.0811, 0.8633},
          {0.1985, 0.8623, 0.9940, 0.0013, 0.8790, 0.6600, 0.1104, 0.8492,
           0.9027, 0.0534, 0.1144, 0.3762, 0.2176, 0.3764, 0.9343, 0.4144},
          {0.7817, 0.8801, 0.7145, 0.7566, 0.9411, 0.5233, 0.8921, 0.7740,
           0.3772, 0.0220, 0.0579, 0.6410, 0.3334, 0.1658, 0.4297, 0.5784},
          {0.8335, 0.7297, 0.2353, 0.1656, 0.5679, 0.2344, 0.1725, 0.8548,
           0.9605, 0.4017, 0.4903, 0.6481, 0.3322, 0.0330, 0.0822, 0.8644},
          {0.0185, 0.3789, 0.4968, 0.2255, 0.5436, 0.3579, 0.9379, 0.8231,
           0.8830, 0.0288, 0.9308, 0.0573, 0.6203, 0.9485, 0.0491, 0.8608},
          {0.0813, 0.6068, 0.8869, 0.6452, 0.6015, 0.4510, 0.1845, 0.1873,
           0.1769, 0.3045, 0.8986, 0.1422, 0.0216, 0.0425, 0.2541, 0.9439},
          {0.2087, 0.8918, 0.7159, 0.6892, 0.8984, 0.3033, 0.0725, 0.4281,
           0.0555, 0.2589, 0.5209, 0.0396, 0.9660, 0.4845, 0.8605, 0.0397}}};
std::vector<std::vector<std::vector<float>>> conv_out_data2 =\
        {{{ 0.2971,  0.2347},
          { 0.2333,  0.2254}},

         {{-0.1531, -0.1622},
          {-0.0472, -0.0904}},

         {{-0.1043, -0.1213},
          {-0.1380, -0.0904}},

         {{-0.2358, -0.2256},
          {-0.3648, -0.3117}},

         {{ 0.2178,  0.3037},
          { 0.2511,  0.3921}},

         {{-0.1157, -0.1178},
          {-0.0640, -0.0904}},

         {{ 0.0359,  0.0421},
          { 0.0668,  0.0489}},

         {{ 0.2010,  0.1569},
          { 0.2794,  0.1519}},

         {{ 0.0106,  0.0956},
          { 0.0679,  0.1011}},

         {{ 0.1364,  0.0958},
          { 0.1925,  0.1090}}};

std::vector<std::vector<std::vector<float>>> conv_input_data=\
        {{{0.2295, 0.2599, 0.6441, 0.0168, 0.7927, 0.3168, 0.9468, 0.2946,
           0.6510, 0.1767, 0.7645, 0.4612},
          {0.3943, 0.9388, 0.9126, 0.3142, 0.2770, 0.9274, 0.2598, 0.9339,
           0.4860, 0.6099, 0.4828, 0.5948},
          {0.9998, 0.1657, 0.4309, 0.5119, 0.3204, 0.4685, 0.3708, 0.3458,
           0.6965, 0.7607, 0.4896, 0.3414},
          {0.8516, 0.7120, 0.7675, 0.5260, 0.1127, 0.4690, 0.0656, 0.1274,
           0.7237, 0.8612, 0.9578, 0.0717},
          {0.7778, 0.9389, 0.4477, 0.9347, 0.4932, 0.6393, 0.2195, 0.4559,
           0.1840, 0.9226, 0.1510, 0.1915},
          {0.3332, 0.2625, 0.9882, 0.6747, 0.0630, 0.0969, 0.1638, 0.2066,
           0.7487, 0.2935, 0.1886, 0.2975},
          {0.6795, 0.6518, 0.5196, 0.0989, 0.2921, 0.9160, 0.9370, 0.3772,
           0.0927, 0.2677, 0.7827, 0.2746},
          {0.0812, 0.1388, 0.5617, 0.6608, 0.4961, 0.8730, 0.1547, 0.4763,
           0.0420, 0.8068, 0.1394, 0.3010},
          {0.0321, 0.3149, 0.5720, 0.6835, 0.1845, 0.0031, 0.2095, 0.2987,
           0.9365, 0.2844, 0.7457, 0.8291},
          {0.3599, 0.6601, 0.8168, 0.4337, 0.8746, 0.5469, 0.3573, 0.4779,
           0.2486, 0.8504, 0.6616, 0.9320},
          {0.3530, 0.5634, 0.5081, 0.7176, 0.1062, 0.3808, 0.9981, 0.4353,
           0.3269, 0.6623, 0.3985, 0.7898},
          {0.9516, 0.0289, 0.1992, 0.1402, 0.2444, 0.1211, 0.1212, 0.0188,
           0.2831, 0.6390, 0.9189, 0.1517}},

         {{0.9418, 0.8566, 0.1098, 0.0454, 0.1247, 0.9565, 0.8543, 0.4707,
           0.3405, 0.7362, 0.9467, 0.7226},
          {0.6276, 0.2356, 0.0118, 0.8911, 0.4193, 0.6709, 0.9051, 0.1855,
           0.8339, 0.3113, 0.4981, 0.9342},
          {0.1486, 0.3907, 0.0704, 0.2226, 0.5163, 0.9326, 0.1216, 0.9232,
           0.8832, 0.3250, 0.1453, 0.5212},
          {0.7148, 0.5316, 0.3406, 0.0170, 0.3191, 0.2849, 0.2415, 0.5319,
           0.7618, 0.9995, 0.9593, 0.6969},
          {0.9408, 0.8048, 0.1872, 0.3158, 0.9612, 0.6753, 0.9354, 0.5379,
           0.3592, 0.4402, 0.2048, 0.0823},
          {0.7723, 0.6818, 0.7118, 0.6614, 0.7270, 0.5569, 0.6218, 0.3408,
           0.2093, 0.7379, 0.3721, 0.4468},
          {0.3118, 0.0977, 0.1137, 0.1801, 0.2204, 0.1414, 0.8682, 0.1054,
           0.8015, 0.2708, 0.6153, 0.6022},
          {0.8705, 0.5935, 0.9919, 0.0586, 0.9524, 0.9755, 0.1864, 0.5465,
           0.4812, 0.6421, 0.6969, 0.8026},
          {0.3568, 0.3298, 0.4970, 0.9867, 0.5367, 0.6762, 0.4278, 0.9811,
           0.1398, 0.8697, 0.5646, 0.3473},
          {0.8531, 0.9425, 0.6495, 0.4983, 0.8105, 0.4635, 0.8852, 0.0164,
           0.3397, 0.8758, 0.4604, 0.7227},
          {0.2770, 0.5340, 0.9153, 0.2417, 0.9824, 0.0425, 0.8894, 0.1229,
           0.9444, 0.2923, 0.2484, 0.8285},
          {0.1150, 0.5183, 0.5363, 0.5093, 0.0094, 0.2796, 0.5879, 0.4254,
           0.5275, 0.5013, 0.3831, 0.2962}},

         {{0.3096, 0.2493, 0.8229, 0.2754, 0.5033, 0.3588, 0.4517, 0.9865,
           0.6831, 0.1928, 0.3726, 0.9510},
          {0.5593, 0.9482, 0.7583, 0.5221, 0.0553, 0.6887, 0.1079, 0.8163,
           0.2664, 0.8677, 0.3635, 0.9620},
          {0.4066, 0.2021, 0.4684, 0.3672, 0.2404, 0.9130, 0.2811, 0.7541,
           0.5825, 0.5392, 0.1108, 0.4390},
          {0.2816, 0.7801, 0.3829, 0.0783, 0.3744, 0.2429, 0.8034, 0.6760,
           0.5320, 0.4850, 0.4305, 0.3114},
          {0.0435, 0.5865, 0.8042, 0.4533, 0.1508, 0.4364, 0.3380, 0.1109,
           0.7376, 0.0349, 0.4138, 0.2180},
          {0.2032, 0.2016, 0.6599, 0.8047, 0.4858, 0.3934, 0.9137, 0.2693,
           0.6279, 0.4159, 0.8641, 0.1526},
          {0.5429, 0.8051, 0.5889, 0.2773, 0.9594, 0.0128, 0.0453, 0.8524,
           0.8258, 0.7511, 0.1315, 0.4201},
          {0.2756, 0.8755, 0.7852, 0.8273, 0.8024, 0.9469, 0.0486, 0.9950,
           0.9743, 0.9827, 0.4943, 0.0917},
          {0.9856, 0.0872, 0.9139, 0.1970, 0.2668, 0.8008, 0.8758, 0.1363,
           0.2088, 0.5141, 0.5744, 0.0157},
          {0.1499, 0.4181, 0.6614, 0.1974, 0.6969, 0.3377, 0.8968, 0.6852,
           0.2181, 0.8499, 0.8425, 0.5653},
          {0.6385, 0.9671, 0.6611, 0.5936, 0.0432, 0.7459, 0.0015, 0.7680,
           0.4933, 0.8672, 0.3020, 0.1445},
          {0.0239, 0.0835, 0.6143, 0.0222, 0.7029, 0.3813, 0.3447, 0.4178,
           0.1323, 0.3780, 0.7844, 0.0424}}};

std::vector<std::vector<std::vector<float>>> conv_out_data = \
        {{{-0.0754, -0.2237, -0.0262,  0.0480, -0.0727, -0.1734,  0.0382,
           -0.2142, -0.2282, -0.1670},
          {-0.2160, -0.3609, -0.2223, -0.0724, -0.1837, -0.1930,  0.1487,
           -0.0935, -0.1778, -0.4095},
          {-0.2878,  0.0353, -0.0875, -0.2558, -0.1071, -0.4258, -0.1939,
            0.0205, -0.1449, -0.2091},
          {-0.0939, -0.3457, -0.0836,  0.1239, -0.0420, -0.0594,  0.0891,
           -0.1130, -0.1706, -0.5745},
          {-0.1072,  0.1951, -0.1803, -0.3547, -0.1862, -0.3887, -0.1535,
            0.2309, -0.1685, -0.2494},
          {-0.0689, -0.3844, -0.2404,  0.0143, -0.1366,  0.2770, -0.0979,
            0.0831, -0.1735,  0.1783},
          { 0.0193,  0.0491, -0.2119,  0.2580, -0.1239, -0.3541, -0.2682,
           -0.1974,  0.1195, -0.4582},
          {-0.1336, -0.0391, -0.0976, -0.2880, -0.1475, -0.3847,  0.0582,
            0.2520, -0.1219,  0.0190},
          { 0.3006,  0.0264, -0.2257, -0.2263, -0.0080, -0.1292, -0.1002,
           -0.2176,  0.0579,  0.0354},
          {-0.1361, -0.3120, -0.4098, -0.2033, -0.2227,  0.0516, -0.2396,
           -0.0877, -0.2232, -0.3101}},

         {{-0.1346, -0.0437,  0.3849,  0.0735,  0.6789,  0.0677,  0.5025,
            0.2014,  0.5297,  0.0100},
          { 0.2256,  0.4630,  0.4059, -0.0493,  0.3361,  0.1011,  0.3677,
            0.5620,  0.4297,  0.3978},
          { 0.3495,  0.1810,  0.4347,  0.4148,  0.4078,  0.3537,  0.3435,
            0.2580,  0.2200,  0.2378},
          { 0.3520,  0.2566,  0.4001,  0.3477,  0.3476,  0.3712,  0.3044,
            0.4033,  0.1817,  0.3777},
          { 0.1504,  0.2988,  0.2552,  0.4125,  0.4302,  0.3593, -0.0856,
            0.3499,  0.3533,  0.5450},
          { 0.1905,  0.2547,  0.3744,  0.5179,  0.1430,  0.1794,  0.1764,
            0.3613,  0.5693,  0.3688},
          { 0.4976,  0.3808,  0.3558,  0.1958,  0.3729,  0.2781,  0.4666,
            0.3366,  0.2823,  0.4841},
          { 0.0132,  0.6507,  0.3071,  0.5733,  0.5467,  0.3240,  0.2739,
            0.3595,  0.2753,  0.5820},
          { 0.3531,  0.4957,  0.3602,  0.1418,  0.2319,  0.2237,  0.3659,
           -0.1160,  0.5537,  0.2505},
          { 0.1175,  0.1157,  0.3067,  0.0553,  0.3657,  0.0607,  0.2903,
            0.2158,  0.3469,  0.2586}},

         {{-0.3459, -0.3202, -0.1616, -0.1540, -0.0093, -0.0420, -0.2537,
           -0.0279, -0.0308, -0.1473},
          {-0.2104, -0.1863,  0.1329, -0.3662, -0.1729, -0.2341, -0.2179,
            0.0577, -0.1930, -0.1813},
          { 0.0653, -0.0658,  0.0078, -0.2219,  0.1197, -0.5254, -0.0450,
           -0.1164,  0.0232, -0.1911},
          {-0.0936, -0.1640,  0.0067,  0.1356, -0.0108, -0.1386,  0.0651,
           -0.2826, -0.2384, -0.2962},
          { 0.0866, -0.0697, -0.2974, -0.1706,  0.0312, -0.0995, -0.1990,
           -0.1156,  0.0068, -0.0418},
          {-0.4030, -0.3581,  0.0714, -0.0955, -0.0626,  0.3599, -0.3416,
           -0.1331, -0.0140,  0.0286},
          { 0.0370, -0.0955, -0.1521,  0.0264, -0.4718, -0.0750, -0.2645,
            0.0503, -0.3442, -0.0781},
          {-0.2190,  0.1145, -0.2420, -0.0637,  0.1724, -0.4259,  0.1265,
           -0.0685, -0.0903,  0.1716},
          { 0.0199, -0.0608,  0.1309, -0.2531,  0.0080, -0.1949, -0.0918,
           -0.3634,  0.2270, -0.1858},
          {-0.4058, -0.4360, -0.3671, -0.1427, -0.4255, -0.0408, -0.3916,
           -0.2498, -0.1944, -0.3262}}};
        
TEST(CONV,conv_loadParam)
{
    easynn::Net net;
    EXPECT_EQ(net.loadModel("../example/conv.pnnx.param",\
    "../example/conv.pnnx.bin"),0);
    easynn::Mat input(12,12,3);
    easynn::Mat output(10,10,3);
    input.fillFromArray(conv_input_data);
    output.fillFromArray(conv_out_data);

    net.input(0,input);
    easynn::Mat m;
    net.extractBlob(1,m);
    EXPECT_EQ(compareMat(m,output),0);
    //printMat(m); 
}

TEST(CONV,padding)
{
  easynn::Mat input(12,12,3);
  easynn::Mat output(10,10,3);
  input.fillFromArray(conv_input_data);
  output.fillFromArray(conv_out_data);
  easynn::Convolution c1;
  c1.padding.resize(2);
  c1.padding[0]=1;
  c1.padding[1]=2;
  c1.in_channels=3;
  easynn:: Mat pad = input;
  c1.copy_make_border_image(input,pad);
  //printMat(pad);
}

TEST(CONV,conv2)
{
    easynn::Net net;
    EXPECT_EQ(net.loadModel("../example/conv2.pnnx.param",\
    "../example/conv2.pnnx.bin"),0);
    easynn::Mat input(16,16,3);
    easynn::Mat output(2,2,10);
    input.fillFromArray(conv_input_data2);
    output.fillFromArray(conv_out_data2);

    net.input(0,input);
    easynn::Mat m;
    net.extractBlob(4,m);
    EXPECT_EQ(compareMat(m,output),0);
    //printMat(m); 
}